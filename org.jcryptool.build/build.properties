product=/org.jcryptool.core/jcryptool.product
runPackager=true

p2.gathering=true
p2.metadata.repo=file:${builder}/repository
p2.artifact.repo=file:${builder}/repository
p2.metadata.repo.name=Metadata Repo
p2.artifact.repo.name=Artifact Repo
p2.flavor=tooling
p2.compress=true
p2.director.profile=JCTProfile
p2.profileName=JCTProfile
p2.launcherName=JCrypTool
p2.autoStart=true

#Set the name of the archive that will result from the product build.
archiveNamePrefix=jcryptool-1.0.0

# The prefix that will be used in the generated archive.
archivePrefix=jcryptool

# The location under which all of the build output will be collected.
collectingFolder=${archivePrefix}

# The list of {os, ws, arch} configurations to build.  This
# value is a '&' separated list of ',' separate triples.
# Build for Windows, Linux and Mac (default)
configs=win32, win32, x86 & \
linux, gtk, x86 & \
macosx, cocoa, x86
# Build for Windows
#configs = win32, win32, x86
# Build for Linux
#configs = linux, gtk, x86
# Build for Mac
#configs = macosx, cocoa, x86
# All available builds
#configs=win32, win32, x86 & \
#	linux, gtk, ppc &\
#linux, gtk, x86 & \
#	linux, gtk, x86_64 & \
#	linux, motif, x86 & \
#	solaris, motif, sparc & \
#	solaris, gtk, sparc & \
#	aix, motif, ppc & \
#	hpux, motif, PA_RISC & \
#	macosx, carbon, ppc

# Allow cycles involving at most one bundle that needs to be compiled with the rest being binary bundles.
allowBinaryCycles=true

# Type of build. Used in naming the build output.  Typically this value is one of I, N, M, S, ...
buildType=I

# ID of the build. Used in naming the build output.
buildId=RC

# Label for the build. Used in naming the build output.
buildLabel=${buildType}.${buildId}

# Timestamp for the build. Used in naming the build output.
timestamp=007

#this property indicates whether the resolution should be done in development mode (i.e. ignore multiple bundles with singletons)
resolution.devMode=false

skipBase=true
skipMaps=true
skipFetch=true


############# JAVA COMPILER OPTIONS ##############
# The location of the Java jars to compile against.  Typically the rt.jar for your JDK/JRE
#bootclasspath=${java.home}/lib/rt.jar

# If using an IBM VM, use
#bootclasspath=${java.home}/lib/core.jar;${java.home}/lib/vm.jar

# specific JRE locations to compile against. These values are used to compile bundles specifying a
# Bundle-RequiredExecutionEnvironment. Uncomment and set values for environments that you support
#CDC-1.0/Foundation-1.0= /path/to/rt.jar
#CDC-1.1/Foundation-1.1=${java.home}/lib/rt.jar
#OSGi/Minimum-1.0=
#OSGi/Minimum-1.1=
#JRE-1.1=
#J2SE-1.2=
#J2SE-1.3=
#J2SE-1.4=
#J2SE-1.5=${java.home}/lib/rt.jar
#J2SE-1.5=D:/Java/jdk1.5.0_20/jre/lib/rt.jar;D:/Java/jdk1.5.0_20/jre/lib/jsse.jar
#JavaSE-1.6=${java.home}/lib/rt.jar
#PersonalJava-1.1=
#PersonalJava-1.2=
#CDC-1.0/PersonalBasis-1.0=
#CDC-1.0/PersonalJava-1.0=
#CDC-1.1/PersonalBasis-1.1=
#CDC-1.1/PersonalJava-1.1=

# Specify the output format of the compiler log when eclipse jdt is used
logExtension=.log

# Whether or not to include debug info in the output jars
javacDebugInfo=false

# Whether or not to fail the build if there are compiler errors
javacFailOnError=true

# Enable or disable verbose mode of the compiler
javacVerbose=true

# Extra arguments for the compiler. These are specific to the java compiler being used.
#compilerArg=

# Default value for the version of the source code. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.5

# Default value for the version of the byte code targeted. This value is used when compiling plug-ins that do not set the Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.5
